/* #region Main */
:root {
    --color-main-bg: #ffffff;
    --color-main-fg: #1a1a1a;
    --color-settings-bg: #bfbfbf;
    --color-settings-fg: #404040;
    --color-main-border-1: #737373;
    --color-main-border-2: #8c8c8c;
    --display-sun: block;
    --display-moon: none;
    --filter-invert-1: invert(0);
    --filter-invert-2: invert(1);
}
@media (prefers-color-scheme: dark) {
    :root {
        --color-main-bg: #1a1a1a;
        --color-main-fg: #ffffff;
        --color-settings-bg: #404040;
        --color-settings-fg: #bfbfbf;
        --color-main-border-1: #8c8c8c;
        --color-main-border-2: #737373;
        --display-sun: none;
        --display-moon: block;
    }
}
* {
    box-sizing: border-box;
    --padding: initial;
    --margin: initial;
    --width: initial;
    --min-width: initial;
    --max-width: initial;
    --height: initial;
    --min-height: initial;
    --max-height: initial;
    --color-spacing: #389900;
    --color-padding: #90ee90bf;
    --color-margin: #ee9090bf;
    --color-element-hover: #00000030;
    --color-editing-outline: #9400d3;
    --color-field: #ffe6b6;
}
body {
    font-family: sans-serif;
    font-size: 16px;
    margin: 0;
    padding: 0.05px;
    padding: 1em;
    background-color: var(--color-main-bg);
    color: var(--color-main-fg);
}
details {
    border: 1px solid var(--color-settings-fg);
    border-radius: 4px;
    padding: 0.5em 0.5em 0;
    margin-bottom: 1em;
    /* transition: max-height 1s; */
}
details[open] {
    padding: 0.5em;
}
details summary {
    position: relative;
    font-weight: bold;
    margin: -0.5em -0.5em 0;
    padding: 1rem;
    padding-left: 2.2rem;
    list-style-type: none;
    cursor: pointer;
    user-select: none;
    transition: transform .5s;
}
details summary:before {
    content: '';
    border-width: .4rem;
    border-style: solid;
    border-color: transparent transparent transparent var(--color-settings-fg);
    position: absolute;
    top: 1.2rem;
    left: 1rem;
    transform: rotate(0);
    transform-origin: .2rem 50%;
    transition: .25s transform ease;
}
details[open] summary {
    border-bottom: 1px solid var(--color-settings-fg);
}
details[open] summary:before {
    transform: rotate(90deg);
}
/* details summary ~ * {
    transition: transform .5s;
}
details[open] summary ~ * {
    transform: translateY(0);
}
details:not([open]) summary ~ * {
    transform: translateY(-100%);
} */
#elementsContainer {
    margin: 0.5em 0 3em !important;
    gap: 1em;
}
#elementsContainer > div {
    text-align: center;
}
#structureContainer,
#previewContainer {
    --height: 20em;
    --padding: 0.5em;
    position: relative;
    height: var(--height);
    padding: var(--padding);
    margin: var(--margin);
    border: solid 1px var(--color-main-border-1);
    border-radius: 0.5em;
    margin-top: 2em !important;
    padding: 0.5em;
    flex-wrap: wrap;
}
#structureContainer:before {
    content: 'Structure Builder';
    position: absolute;
    left: 0;
    top: -2em;
    padding: 0.25em;
    pointer-events: none;
}
#previewContainer:before {
    content: 'Preview';
    position: absolute;
    left: 0;
    top: -2em;
    padding: 0.25em;
}
#structureContainer,
#structureContainer *:not(.nothing) {
    position: relative;
    background-color: initial;
    box-shadow: inset 0 0 0 var(--padding, 0) var(--color-padding), 0 0 0 var(--margin, 0) var(--color-margin);
}

#structureContainer *:not(.nothing) {
    cursor: grab;
}
#structureContainer:after,
#structureContainer *:not(.nothing):after {
    --m: var(--margin, 0.01px);
    content: '';
    position: absolute;
    left: calc(var(--m) * -1);
    top: calc(var(--m) * -1);
    width: calc(100% + var(--m) * 2);
    height: calc(100% + var(--m) * 2);
    border-radius: inherit;
    pointer-events: none;
}
#structureContainer:hover:not(:has(:hover)):after,
#structureContainer *:not(.nothing):hover:not(:has(:hover)):after {
    background-color: var(--color-element-hover);
}
#structureContainer:hover *:not(.nothing),
#structureContainer *:hover *:not(.nothing) {
    background-color: var(--color-main-bg);
    z-index: 1;
}
#structureContainer .layout-grid:has(.field) .structure-item {
    display: none;
}
#elementsContainer .container,
#structureContainer .container {
    outline: solid 1px var(--color-main-border-1);
}
#structureContainer .spacing,
#previewContainer .spacing {
    position: relative;
    flex-grow: 100;
}
#structureWrapper > *:not(:first-child) {
    margin-top: 2em;
}
.editing {
    outline: solid 2px var(--color-editing-outline) !important;
    z-index: 99 !important;
}
.field {
    display: block;
    width: auto;
    max-width: 50%;
    max-height: 50%;
    outline: solid 2px var(--color-field);
    pointer-events: none;
    z-index: 100;
    align-self: center;
    margin: auto;
}
.layout-vertical > .field {
    min-width: 3em;
}
.layout-horizontal > .field {
    min-width: 0;
    height: auto;
    min-height: 3em;
}
.flex  {
    display: flex;
    flex-wrap: wrap;
    margin: 1em;
}
.nothing {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    text-align: center;
    align-content: center;
    pointer-events: none;
}
.nothing:has(+ *) {
    display: none;
}
.noselect {
    user-select: none;
}
.nowrap {
    flex-wrap: nowrap;
}
.togglebutton {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    opacity: 0;
}
*:has( > .togglebutton) {
    position: relative;
    width: 2em;
    height: 2em;
    margin-right: 0.5em;
    text-align: center;
    align-content: center;
}
*:has( > .togglebutton):before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 0.5em;
    background-color: var(--color-main-bg);
    z-index: -1;
}
*:has( > .togglebutton:checked):before {
    background-color: var(--color-main-border-2);
}
/* #endregion */

/* #region Design */
.container {
    z-index: 2 !important;
}
/* .text {}
.spacing {}
.svg {}
.image {} */
.element {
    width: var(--width);
    min-width: var(--min-width);
    max-width: var(--max-width);
    height: var(--height);
    min-height: var(--min-height);
    max-height: var(--max-height);
    padding: var(--padding);
    margin: var(--margin);
    font-size: var(--font-size);
    font-weight: var(--font-weight);
    font-style: var(--font-style);
    text-decoration: var(--text-decoration);
}
*[id^=element]:not(#elementsContainer) {
    position: relative;
    width: 5em;
    height: 5em;
    align-content: center;
    cursor: grab;
}
*[id^=element]:not(#elementsContainer):after {
    content: attr(data-name);
    position: absolute;
    left: 50%;
    width: 100%;
    bottom: -2em;
    transform: translateX(-50%);
    line-height: 2;
    pointer-events: all;
}
#element2:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 0;
    background-color: var(--color-spacing);
    clip-path: polygon(0% 41%, 4% 41%, 4% 48%, 48% 48%, 48% 4%, 41% 4%, 41% 0%, 59% 0%, 59% 4%, 52% 4%, 52% 48%, 96% 48%, 96% 41%, 100% 41%, 100% 59%, 96% 59%, 96% 52%, 52% 52%, 52% 96%, 59% 96%, 59% 100%, 41% 100%, 41% 96%, 48% 96%, 48% 52%, 4% 52%, 4% 59%, 0% 59%, 0% 100%, 100% 100%, 100% 140%, 0% 140%);
}
.element img,
.element svg {
    display: none;
}
.element[data-name="Image"] img,
.element[data-name="SVG"] svg {
    display: block;
}
.layout-horizontal {
    display: flex;
    flex-wrap: wrap;
}
.layout-vertical {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
}
.layout-grid {
    --cols: 2;
    --rows: 2;
    display: grid;
    grid-template-columns: repeat(var(--cols), minmax(0, 1fr));
    grid-template-rows: repeat(var(--rows), minmax(0, 1fr));
}
.layout-grid > .spacing {
    display: none;
}
.layout-grid > .field {
    width: 100%;
    height: 100%;
    min-width: 3em;
    min-height: 3em;
}
.layout-horizontal.horizontal-start:not(.layout-grid),
.layout-vertical.vertical-start:not(.layout-grid) {
    justify-content: start;
}
.layout-horizontal.horizontal-center:not(.layout-grid),
.layout-vertical.vertical-center:not(.layout-grid) {
    justify-content: center;
}
.layout-horizontal.horizontal-end:not(.layout-grid),
.layout-vertical.vertical-end:not(.layout-grid) {
    justify-content: end;
}
.layout-horizontal.vertical-start:not(.layout-grid),
.layout-vertical.horizontal-start:not(.layout-grid) {
    align-content: start;
}
.layout-horizontal.vertical-center:not(.layout-grid),
.layout-vertical.horizontal-center:not(.layout-grid) {
    align-content: center;
}
.layout-horizontal.vertical-end:not(.layout-grid),
.layout-vertical.horizontal-end:not(.layout-grid) {
    align-content: end;
}
.layout-horizontal.vertical-center:not(.layout-grid) *,
.layout-vertical.horizontal-center:not(.layout-grid) * {
    align-self: center;
}
.layout-horizontal.vertical-end:not(.layout-grid) *,
.layout-vertical.horizontal-end:not(.layout-grid) * {
    align-self: end;
}
.layout-vertical .spacing {
    width: min-content;
    min-width: 1.5em;
    margin: 0.5em auto;
}
.layout-horizontal .spacing {
    height: auto;
    min-height: 1em;
    margin: 0 0.5em;
}
.spacing:before {
    content: '';
    position: absolute;
    padding: 0.25em;
    pointer-events: none;
}
.spacing:after {
    content: '';
    position: absolute;
    pointer-events: none;
}
.layout-horizontal > .spacing:before {
    top: 50%;
    left: 0;
    width: calc(100% - 0.9em);
    height: 0.4em;
    border-left: solid var(--color-spacing, black);
    border-right: solid var(--color-spacing, black);
    background: linear-gradient(transparent 40%, var(--color-spacing, black) 40%, var(--color-spacing, black) 60%, transparent 60%);
    transform: translateY(-50%);
}
.layout-vertical > .spacing:before {
    top: 0;
    left: 50%;
    width: 0.4em;
    height: calc(100% - 0.9em);
    border-top: solid var(--color-spacing, black);
    border-bottom: solid var(--color-spacing, black);
    background: linear-gradient(90deg, transparent 40%, var(--color-spacing, black) 40%, var(--color-spacing, black) 60%, transparent 60%);
    transform: translateX(-50%);
}
#previewContainer .spacing:before {
    content: none;
}
/* #endregion */

/* #region Settings */
#settings {
    display: flex;
    position: fixed;
    flex-direction: column;
    top: 0;
    right: 0;
    width: 50%;
    height: calc(100% - 2em);
    padding: 0 1em;
    margin: 1em 0;
    background-color: var(--color-settings-bg);
    transform: translateX(110%);
    transition: transform 0.75s;
    border-top-left-radius: 0.5em;
    z-index: 100;
}
#settings:before {
    content: url('./graphics/close.svg');
    position: absolute;
    bottom: 0;
    left: -3em;
    width: 2em;
    height: 2em;
    padding: 0.5em;
    background-color: inherit;
    border-radius: 0.5em 0 0 0.5em;
    pointer-events: none;
}
#settings:after {
    content: '';
    position: absolute;
    left: -1em;
    bottom: 3em;
    width: 1em;
    height: 1em;
    border-bottom-right-radius: 1em;
    box-shadow: 3px 3px 0 3px var(--color-settings-bg);
}
#settings #dimensions {
    --width: 10em;
    --height: 10em;
    position: relative;
    width: var(--width);
    height: var(--height);
    margin: 4em 5em 2em 1em;
    box-shadow: inset 0 0 0 calc(var(--width) / 9) var(--color-padding), 0 0 0 calc(var(--width) / 9) var(--color-margin);
    border-radius: 0.5em;
    background-color: var(--color-main-bg);
}
#settings #dimensions:before {
    content: '';
    position: absolute;
    width: 100%;
    height: 5px;
    left: 0;
    top: -2.75em;
    box-shadow: -1px -1px 0 1px, 1px -1px 0 1px;
}
#settings #dimensions:after {
    content: '';
    position: absolute;
    height: 100%;
    width: 5px;
    top: 0;
    right: -2.75em;
    z-index: -1;
    box-shadow: 1px 1px 0 1px, 1px -1px 0 1px;
}
#settings #dimensions input,
#settings #dimensions input + span {
    position: absolute;
    text-align: center;
}
#settings #dimensions span:nth-of-type(1):before {
    content: '';
}
#settings #dimensions input:nth-of-type(1), /* width */
#settings #dimensions input:nth-of-type(1) + span,
#settings #dimensions input:nth-of-type(3), /* padding */
#settings #dimensions input:nth-of-type(3) + span {
    top: 0;
    left: 50%;
    transform: translate(-50%, var(--translateY, 0));
}
#settings #dimensions input:nth-of-type(2), /* height */
#settings #dimensions input:nth-of-type(2) + span {
    right: 0;
    bottom: 50%;
    transform: translate(var(--translateX), 50%);
    writing-mode: sideways-rl;
}
#settings #dimensions input:nth-of-type(4), /* margin */
#settings #dimensions input:nth-of-type(4) + span {
    bottom: 0;
    left: 50%;
    transform: translate(-50%, var(--translateY, 0));
}
#settings #dimensions input:nth-of-type(1) { --translateY: -195% }
#settings #dimensions input:nth-of-type(1) + span { --translateY: -360% }
#settings #dimensions input:nth-of-type(2) { --translateX: 195% }
#settings #dimensions input:nth-of-type(2) + span { --translateX: 360% }
#settings #dimensions input:nth-of-type(3) { --translateY: 110% }
#settings #dimensions input:nth-of-type(3) + span { --translateY: 10% }
#settings #dimensions input:nth-of-type(4) { --translateY: 190% }
#settings #dimensions input:nth-of-type(4) + span { --translateY: 90% }
#settings #remove {
    width: 4em;
    height: 4em;
    padding: 0;
    margin: 1.5rem 1.5rem 1rem;
    margin-left: 0;
    line-height: 0;
}
#settings:has(~ #structureWrapper > .editing) #remove {
    display: none;
} 
#settings:has(~ #structureWrapper .editing) {
    transform: translateX(0);
}
#settings > div {
    margin: 0.5em 0 1em;
}
#settings > div:first-of-type {
    width: 100%;
}
#settings h2 {
    background-color: var(--color-main-bg);
    width: 100%;
    padding: 0.5em;
    margin: 1.5rem 0 1rem;
}
#settings div:has(> input[type="radio"]) {
    width: 6em;
    aspect-ratio: 1;
    outline: solid 1px var(--color-main-border-1);
}
#settings .layout div:has(> input:checked) {
    outline: solid 2px var(--color-editing-outline);
}
#settings div:has(> [type="radio"]) {
    display: flex;
}
#settings div:has(> [value="layout-vertical"]) {
    flex-direction: column;
}
#settings div:has(> [value="layout-grid"]) {
    display: grid;
    grid-template-columns: repeat(var(--cols), minmax(0, 1fr));
    grid-template-rows: repeat(var(--rows), minmax(0, 1fr));
}
#settings div:has(> [value="layout-grid"]) div {
    margin: 12% !important;
}
#settings input[type="radio"] ~ div {
    flex: 1;
    margin: 7.5%;
    background-color: var(--color-main-border-1);
    border-radius: 0.5em;
}
#settings div.layout {
    padding: 0;
}
#settings div.layout > div {
    display: flex;
    flex-wrap: wrap;
    gap: 1em;
}
#settings div.layout > div > div {
    position: relative;
    border-radius: 0.5em;
}
#settings div.layout input:first-of-type {
    position: absolute;
    width: 100%;
    height: 100%;
    margin: 0;
    opacity: 0;
    cursor: pointer;
}
#settings div.layout input[type="number"] {
    display: none;
    position: absolute;
}
#settings div.layout input:checked ~ input[type="number"] {
    display: block;
}
#settings div.layout input[type="number"]:not(:first-of-type):not(:last-of-type) {
    right: 0;
    top: 50%;
    transform: translate(115%, -50%);
}
#settings div.layout input[type="number"]:last-of-type {
    top: 0;
    left: 50%;
    transform: translate(-50%, -125%);
}
#settings .orientation {
    width: min-content;
}
#settings .orientation > div {
    flex-wrap: nowrap !important;
    gap: 0.5em !important;
}
#settings .orientation > div > div {
    width: 2em;
    height: 2em;
}
#settings .orientation [value^="horizontal"] ~ div {
    flex: unset;
    width: 5px;
}
#settings .orientation [value^="vertical"] ~ div {
    flex: unset;
    height: 5px;
}
#settings .orientation div:has(> [value$="center"]) {
    justify-content: center;
}
#settings .orientation div:has(> [value$="end"]) {
    justify-content: end;
}
#settings .orientation div:has(> [value^="vertical"]) {
    flex-direction: column;
}
#settings .orientation div:has(> [value^="horizontal"][value$="end"]) {
    margin-right: 1em;
}
#settings label + input {
    width: min-content;
    margin: 0.5em 0;
}
#settings select.type {
    width: min-content;
    margin: 0.5em 0;
}
#settings .layout,
#settings .type,
#settings .text,
#settings .image,
#settings .svg {
    display: none;
}
#settings:has(~ #structureWrapper .editing[data-name="Container"]) .layout,
#settings:has(~ #structureWrapper .editing[data-name="Text"]) .text,
#settings:has(~ #structureWrapper .editing[data-name="Image"]) .image,
#settings:has(~ #structureWrapper .editing[data-name="SVG"]) .svg {
    display: block;
}
#settings:has(input[value="layout-grid"]:checked) .orientation {
    display: none !important;
}
/* #endregion */

/* #region Theme switcher */
#moon {
    display: var(--display-moon);
}
#sun {
    display: var(--display-sun);
}
#moon, #sun {
    width: inherit;
    height: inherit;
    border-radius: 50%;
    padding: 0.5em;
    transition: transform 0.5s;
    background-color: var(--color-settings-bg);
    color: var(--color-main-fg);
}
#moon:hover,
#sun:hover {
    background-color: var(--color-main-fg);
    color: var(--color-main-bg);
}
.changeTheme {
    position: fixed;
    left: 20px;
    bottom: 20px;
    width: 5em;
    height: 5em;
    padding: 0;
    border-width: 0;
    border-radius: 50%;
    z-index: 100;
}
.changeTheme:hover #moon {
    transform: rotate(360deg);
}
.changeTheme:hover #sun {
    transform: rotate(180deg);
}
/*#endregion*/